/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.bimdata);
  }
}(this, function(expect, bimdata) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new bimdata.Mask2DRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Mask2DRequest', function() {
    it('should create an instance of Mask2DRequest', function() {
      // uncomment below and update the code to test Mask2DRequest
      //var instance = new bimdata.Mask2DRequest();
      //expect(instance).to.be.a(bimdata.Mask2DRequest);
    });

    it('should have the property cropPath (base name: "crop_path")', function() {
      // uncomment below and update the code to test the property cropPath
      //var instance = new bimdata.Mask2DRequest();
      //expect(instance).to.be();
    });

    it('should have the property grayscale (base name: "grayscale")', function() {
      // uncomment below and update the code to test the property grayscale
      //var instance = new bimdata.Mask2DRequest();
      //expect(instance).to.be();
    });

    it('should have the property opacity (base name: "opacity")', function() {
      // uncomment below and update the code to test the property opacity
      //var instance = new bimdata.Mask2DRequest();
      //expect(instance).to.be();
    });

    it('should have the property brightness (base name: "brightness")', function() {
      // uncomment below and update the code to test the property brightness
      //var instance = new bimdata.Mask2DRequest();
      //expect(instance).to.be();
    });

    it('should have the property contrast (base name: "contrast")', function() {
      // uncomment below and update the code to test the property contrast
      //var instance = new bimdata.Mask2DRequest();
      //expect(instance).to.be();
    });

  });

}));
