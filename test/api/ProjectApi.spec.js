/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * OpenAPI spec version: v1
 * Contact: contact@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.bimdata);
  }
}(this, function(expect, bimdata) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new bimdata.ProjectApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectApi', function() {
    describe('cancelProjectUserInvitation', function() {
      it('should call cancelProjectUserInvitation successfully', function(done) {
        //uncomment below and update the code to test cancelProjectUserInvitation
        //instance.cancelProjectUserInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createClassification', function() {
      it('should call createClassification successfully', function(done) {
        //uncomment below and update the code to test createClassification
        //instance.createClassification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createClassification_0', function() {
      it('should call createClassification_0 successfully', function(done) {
        //uncomment below and update the code to test createClassification_0
        //instance.createClassification_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFolder', function() {
      it('should call createFolder successfully', function(done) {
        //uncomment below and update the code to test createFolder
        //instance.createFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProject', function() {
      it('should call createProject successfully', function(done) {
        //uncomment below and update the code to test createProject
        //instance.createProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClassification', function() {
      it('should call deleteClassification successfully', function(done) {
        //uncomment below and update the code to test deleteClassification
        //instance.deleteClassification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClassification_0', function() {
      it('should call deleteClassification_0 successfully', function(done) {
        //uncomment below and update the code to test deleteClassification_0
        //instance.deleteClassification_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFolder', function() {
      it('should call deleteFolder successfully', function(done) {
        //uncomment below and update the code to test deleteFolder
        //instance.deleteFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProject', function() {
      it('should call deleteProject successfully', function(done) {
        //uncomment below and update the code to test deleteProject
        //instance.deleteProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProjectUser', function() {
      it('should call deleteProjectUser successfully', function(done) {
        //uncomment below and update the code to test deleteProjectUser
        //instance.deleteProjectUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateClassification', function() {
      it('should call fullUpdateClassification successfully', function(done) {
        //uncomment below and update the code to test fullUpdateClassification
        //instance.fullUpdateClassification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateClassification_0', function() {
      it('should call fullUpdateClassification_0 successfully', function(done) {
        //uncomment below and update the code to test fullUpdateClassification_0
        //instance.fullUpdateClassification_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateFolder', function() {
      it('should call fullUpdateFolder successfully', function(done) {
        //uncomment below and update the code to test fullUpdateFolder
        //instance.fullUpdateFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateProject', function() {
      it('should call fullUpdateProject successfully', function(done) {
        //uncomment below and update the code to test fullUpdateProject
        //instance.fullUpdateProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateProjectUser', function() {
      it('should call fullUpdateProjectUser successfully', function(done) {
        //uncomment below and update the code to test fullUpdateProjectUser
        //instance.fullUpdateProjectUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClassification', function() {
      it('should call getClassification successfully', function(done) {
        //uncomment below and update the code to test getClassification
        //instance.getClassification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClassification_0', function() {
      it('should call getClassification_0 successfully', function(done) {
        //uncomment below and update the code to test getClassification_0
        //instance.getClassification_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClassifications', function() {
      it('should call getClassifications successfully', function(done) {
        //uncomment below and update the code to test getClassifications
        //instance.getClassifications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClassifications_0', function() {
      it('should call getClassifications_0 successfully', function(done) {
        //uncomment below and update the code to test getClassifications_0
        //instance.getClassifications_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFolder', function() {
      it('should call getFolder successfully', function(done) {
        //uncomment below and update the code to test getFolder
        //instance.getFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFolders', function() {
      it('should call getFolders successfully', function(done) {
        //uncomment below and update the code to test getFolders
        //instance.getFolders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProject', function() {
      it('should call getProject successfully', function(done) {
        //uncomment below and update the code to test getProject
        //instance.getProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProjectInvitations', function() {
      it('should call getProjectInvitations successfully', function(done) {
        //uncomment below and update the code to test getProjectInvitations
        //instance.getProjectInvitations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProjectTree', function() {
      it('should call getProjectTree successfully', function(done) {
        //uncomment below and update the code to test getProjectTree
        //instance.getProjectTree(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProjectUser', function() {
      it('should call getProjectUser successfully', function(done) {
        //uncomment below and update the code to test getProjectUser
        //instance.getProjectUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProjectUsers', function() {
      it('should call getProjectUsers successfully', function(done) {
        //uncomment below and update the code to test getProjectUsers
        //instance.getProjectUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProjects', function() {
      it('should call getProjects successfully', function(done) {
        //uncomment below and update the code to test getProjects
        //instance.getProjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inviteProjectUser', function() {
      it('should call inviteProjectUser successfully', function(done) {
        //uncomment below and update the code to test inviteProjectUser
        //instance.inviteProjectUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClassification', function() {
      it('should call updateClassification successfully', function(done) {
        //uncomment below and update the code to test updateClassification
        //instance.updateClassification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClassification_0', function() {
      it('should call updateClassification_0 successfully', function(done) {
        //uncomment below and update the code to test updateClassification_0
        //instance.updateClassification_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFolder', function() {
      it('should call updateFolder successfully', function(done) {
        //uncomment below and update the code to test updateFolder
        //instance.updateFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProject', function() {
      it('should call updateProject successfully', function(done) {
        //uncomment below and update the code to test updateProject
        //instance.updateProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProjectUser', function() {
      it('should call updateProjectUser successfully', function(done) {
        //uncomment below and update the code to test updateProjectUser
        //instance.updateProjectUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
