/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.bimdata);
  }
}(this, function(expect, bimdata) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new bimdata.ModelApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelApi', function() {
    describe('addModelErrors', function() {
      it('should call addModelErrors successfully', function(done) {
        //uncomment below and update the code to test addModelErrors
        //instance.addModelErrors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addZoneSpace', function() {
      it('should call addZoneSpace successfully', function(done) {
        //uncomment below and update the code to test addZoneSpace
        //instance.addZoneSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkDeleteModelClassifications', function() {
      it('should call bulkDeleteModelClassifications successfully', function(done) {
        //uncomment below and update the code to test bulkDeleteModelClassifications
        //instance.bulkDeleteModelClassifications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkDeleteModelProperties', function() {
      it('should call bulkDeleteModelProperties successfully', function(done) {
        //uncomment below and update the code to test bulkDeleteModelProperties
        //instance.bulkDeleteModelProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkDeleteModelPropertyDefinitions', function() {
      it('should call bulkDeleteModelPropertyDefinitions successfully', function(done) {
        //uncomment below and update the code to test bulkDeleteModelPropertyDefinitions
        //instance.bulkDeleteModelPropertyDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkDeleteModelUnits', function() {
      it('should call bulkDeleteModelUnits successfully', function(done) {
        //uncomment below and update the code to test bulkDeleteModelUnits
        //instance.bulkDeleteModelUnits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkDeletePropertySet', function() {
      it('should call bulkDeletePropertySet successfully', function(done) {
        //uncomment below and update the code to test bulkDeletePropertySet
        //instance.bulkDeletePropertySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkFullUpdateElements', function() {
      it('should call bulkFullUpdateElements successfully', function(done) {
        //uncomment below and update the code to test bulkFullUpdateElements
        //instance.bulkFullUpdateElements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkFullUpdateModelProperty', function() {
      it('should call bulkFullUpdateModelProperty successfully', function(done) {
        //uncomment below and update the code to test bulkFullUpdateModelProperty
        //instance.bulkFullUpdateModelProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkRemoveClassificationsOfElement', function() {
      it('should call bulkRemoveClassificationsOfElement successfully', function(done) {
        //uncomment below and update the code to test bulkRemoveClassificationsOfElement
        //instance.bulkRemoveClassificationsOfElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkRemoveDocumentsOfElement', function() {
      it('should call bulkRemoveDocumentsOfElement successfully', function(done) {
        //uncomment below and update the code to test bulkRemoveDocumentsOfElement
        //instance.bulkRemoveDocumentsOfElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkRemoveElementsFromClassification', function() {
      it('should call bulkRemoveElementsFromClassification successfully', function(done) {
        //uncomment below and update the code to test bulkRemoveElementsFromClassification
        //instance.bulkRemoveElementsFromClassification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkUpdateElements', function() {
      it('should call bulkUpdateElements successfully', function(done) {
        //uncomment below and update the code to test bulkUpdateElements
        //instance.bulkUpdateElements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkUpdateModelProperty', function() {
      it('should call bulkUpdateModelProperty successfully', function(done) {
        //uncomment below and update the code to test bulkUpdateModelProperty
        //instance.bulkUpdateModelProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAccessToken', function() {
      it('should call createAccessToken successfully', function(done) {
        //uncomment below and update the code to test createAccessToken
        //instance.createAccessToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBuilding', function() {
      it('should call createBuilding successfully', function(done) {
        //uncomment below and update the code to test createBuilding
        //instance.createBuilding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBuildingPlan', function() {
      it('should call createBuildingPlan successfully', function(done) {
        //uncomment below and update the code to test createBuildingPlan
        //instance.createBuildingPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createClassificationElementRelations', function() {
      it('should call createClassificationElementRelations successfully', function(done) {
        //uncomment below and update the code to test createClassificationElementRelations
        //instance.createClassificationElementRelations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createClassificationsOfElement', function() {
      it('should call createClassificationsOfElement successfully', function(done) {
        //uncomment below and update the code to test createClassificationsOfElement
        //instance.createClassificationsOfElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDrawing', function() {
      it('should call createDrawing successfully', function(done) {
        //uncomment below and update the code to test createDrawing
        //instance.createDrawing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createElement', function() {
      it('should call createElement successfully', function(done) {
        //uncomment below and update the code to test createElement
        //instance.createElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createElementPropertySet', function() {
      it('should call createElementPropertySet successfully', function(done) {
        //uncomment below and update the code to test createElementPropertySet
        //instance.createElementPropertySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createElementPropertySetProperty', function() {
      it('should call createElementPropertySetProperty successfully', function(done) {
        //uncomment below and update the code to test createElementPropertySetProperty
        //instance.createElementPropertySetProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createElementPropertySetPropertyDefinition', function() {
      it('should call createElementPropertySetPropertyDefinition successfully', function(done) {
        //uncomment below and update the code to test createElementPropertySetPropertyDefinition
        //instance.createElementPropertySetPropertyDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createElementPropertySetPropertyDefinitionUnit', function() {
      it('should call createElementPropertySetPropertyDefinitionUnit successfully', function(done) {
        //uncomment below and update the code to test createElementPropertySetPropertyDefinitionUnit
        //instance.createElementPropertySetPropertyDefinitionUnit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLabel', function() {
      it('should call createLabel successfully', function(done) {
        //uncomment below and update the code to test createLabel
        //instance.createLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLayer', function() {
      it('should call createLayer successfully', function(done) {
        //uncomment below and update the code to test createLayer
        //instance.createLayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMask2D', function() {
      it('should call createMask2D successfully', function(done) {
        //uncomment below and update the code to test createMask2D
        //instance.createMask2D(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMetaBuilding', function() {
      it('should call createMetaBuilding successfully', function(done) {
        //uncomment below and update the code to test createMetaBuilding
        //instance.createMetaBuilding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModel', function() {
      it('should call createModel successfully', function(done) {
        //uncomment below and update the code to test createModel
        //instance.createModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModelPropertyDefinition', function() {
      it('should call createModelPropertyDefinition successfully', function(done) {
        //uncomment below and update the code to test createModelPropertyDefinition
        //instance.createModelPropertyDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModelUnit', function() {
      it('should call createModelUnit successfully', function(done) {
        //uncomment below and update the code to test createModelUnit
        //instance.createModelUnit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMultiPageModel', function() {
      it('should call createMultiPageModel successfully', function(done) {
        //uncomment below and update the code to test createMultiPageModel
        //instance.createMultiPageModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPhotosphere', function() {
      it('should call createPhotosphere successfully', function(done) {
        //uncomment below and update the code to test createPhotosphere
        //instance.createPhotosphere(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPhotosphereBuilding', function() {
      it('should call createPhotosphereBuilding successfully', function(done) {
        //uncomment below and update the code to test createPhotosphereBuilding
        //instance.createPhotosphereBuilding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPostionedModel', function() {
      it('should call createPostionedModel successfully', function(done) {
        //uncomment below and update the code to test createPostionedModel
        //instance.createPostionedModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPropertySet', function() {
      it('should call createPropertySet successfully', function(done) {
        //uncomment below and update the code to test createPropertySet
        //instance.createPropertySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPropertySetElementRelations', function() {
      it('should call createPropertySetElementRelations successfully', function(done) {
        //uncomment below and update the code to test createPropertySetElementRelations
        //instance.createPropertySetElementRelations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRawElements', function() {
      it('should call createRawElements successfully', function(done) {
        //uncomment below and update the code to test createRawElements
        //instance.createRawElements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSpace', function() {
      it('should call createSpace successfully', function(done) {
        //uncomment below and update the code to test createSpace
        //instance.createSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStorey', function() {
      it('should call createStorey successfully', function(done) {
        //uncomment below and update the code to test createStorey
        //instance.createStorey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStoreyPlan', function() {
      it('should call createStoreyPlan successfully', function(done) {
        //uncomment below and update the code to test createStoreyPlan
        //instance.createStoreyPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSystem', function() {
      it('should call createSystem successfully', function(done) {
        //uncomment below and update the code to test createSystem
        //instance.createSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTileset', function() {
      it('should call createTileset successfully', function(done) {
        //uncomment below and update the code to test createTileset
        //instance.createTileset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createXktFile', function() {
      it('should call createXktFile successfully', function(done) {
        //uncomment below and update the code to test createXktFile
        //instance.createXktFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createZone', function() {
      it('should call createZone successfully', function(done) {
        //uncomment below and update the code to test createZone
        //instance.createZone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createZoneSpace', function() {
      it('should call createZoneSpace successfully', function(done) {
        //uncomment below and update the code to test createZoneSpace
        //instance.createZoneSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccessToken', function() {
      it('should call deleteAccessToken successfully', function(done) {
        //uncomment below and update the code to test deleteAccessToken
        //instance.deleteAccessToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBuilding', function() {
      it('should call deleteBuilding successfully', function(done) {
        //uncomment below and update the code to test deleteBuilding
        //instance.deleteBuilding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBuildingPlan', function() {
      it('should call deleteBuildingPlan successfully', function(done) {
        //uncomment below and update the code to test deleteBuildingPlan
        //instance.deleteBuildingPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDrawing', function() {
      it('should call deleteDrawing successfully', function(done) {
        //uncomment below and update the code to test deleteDrawing
        //instance.deleteDrawing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteElement', function() {
      it('should call deleteElement successfully', function(done) {
        //uncomment below and update the code to test deleteElement
        //instance.deleteElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLabel', function() {
      it('should call deleteLabel successfully', function(done) {
        //uncomment below and update the code to test deleteLabel
        //instance.deleteLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLayer', function() {
      it('should call deleteLayer successfully', function(done) {
        //uncomment below and update the code to test deleteLayer
        //instance.deleteLayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMask2D', function() {
      it('should call deleteMask2D successfully', function(done) {
        //uncomment below and update the code to test deleteMask2D
        //instance.deleteMask2D(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModel', function() {
      it('should call deleteModel successfully', function(done) {
        //uncomment below and update the code to test deleteModel
        //instance.deleteModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelProperty', function() {
      it('should call deleteModelProperty successfully', function(done) {
        //uncomment below and update the code to test deleteModelProperty
        //instance.deleteModelProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelPropertyDefinition', function() {
      it('should call deleteModelPropertyDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteModelPropertyDefinition
        //instance.deleteModelPropertyDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelUnit', function() {
      it('should call deleteModelUnit successfully', function(done) {
        //uncomment below and update the code to test deleteModelUnit
        //instance.deleteModelUnit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelWithoutDoc', function() {
      it('should call deleteModelWithoutDoc successfully', function(done) {
        //uncomment below and update the code to test deleteModelWithoutDoc
        //instance.deleteModelWithoutDoc(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePostionedModel', function() {
      it('should call deletePostionedModel successfully', function(done) {
        //uncomment below and update the code to test deletePostionedModel
        //instance.deletePostionedModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePropertySet', function() {
      it('should call deletePropertySet successfully', function(done) {
        //uncomment below and update the code to test deletePropertySet
        //instance.deletePropertySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSpace', function() {
      it('should call deleteSpace successfully', function(done) {
        //uncomment below and update the code to test deleteSpace
        //instance.deleteSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStorey', function() {
      it('should call deleteStorey successfully', function(done) {
        //uncomment below and update the code to test deleteStorey
        //instance.deleteStorey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStoreyPlan', function() {
      it('should call deleteStoreyPlan successfully', function(done) {
        //uncomment below and update the code to test deleteStoreyPlan
        //instance.deleteStoreyPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSystem', function() {
      it('should call deleteSystem successfully', function(done) {
        //uncomment below and update the code to test deleteSystem
        //instance.deleteSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteZone', function() {
      it('should call deleteZone successfully', function(done) {
        //uncomment below and update the code to test deleteZone
        //instance.deleteZone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteZoneSpace', function() {
      it('should call deleteZoneSpace successfully', function(done) {
        //uncomment below and update the code to test deleteZoneSpace
        //instance.deleteZoneSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportIfc', function() {
      it('should call exportIfc successfully', function(done) {
        //uncomment below and update the code to test exportIfc
        //instance.exportIfc(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateElement', function() {
      it('should call fullUpdateElement successfully', function(done) {
        //uncomment below and update the code to test fullUpdateElement
        //instance.fullUpdateElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessToken', function() {
      it('should call getAccessToken successfully', function(done) {
        //uncomment below and update the code to test getAccessToken
        //instance.getAccessToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessTokens', function() {
      it('should call getAccessTokens successfully', function(done) {
        //uncomment below and update the code to test getAccessTokens
        //instance.getAccessTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBuilding', function() {
      it('should call getBuilding successfully', function(done) {
        //uncomment below and update the code to test getBuilding
        //instance.getBuilding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBuildingPlanPositioning', function() {
      it('should call getBuildingPlanPositioning successfully', function(done) {
        //uncomment below and update the code to test getBuildingPlanPositioning
        //instance.getBuildingPlanPositioning(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBuildings', function() {
      it('should call getBuildings successfully', function(done) {
        //uncomment below and update the code to test getBuildings
        //instance.getBuildings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClassificationsOfElement', function() {
      it('should call getClassificationsOfElement successfully', function(done) {
        //uncomment below and update the code to test getClassificationsOfElement
        //instance.getClassificationsOfElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentsOfElement', function() {
      it('should call getDocumentsOfElement successfully', function(done) {
        //uncomment below and update the code to test getDocumentsOfElement
        //instance.getDocumentsOfElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDrawing', function() {
      it('should call getDrawing successfully', function(done) {
        //uncomment below and update the code to test getDrawing
        //instance.getDrawing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDrawings', function() {
      it('should call getDrawings successfully', function(done) {
        //uncomment below and update the code to test getDrawings
        //instance.getDrawings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElement', function() {
      it('should call getElement successfully', function(done) {
        //uncomment below and update the code to test getElement
        //instance.getElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElementLinkedDocuments', function() {
      it('should call getElementLinkedDocuments successfully', function(done) {
        //uncomment below and update the code to test getElementLinkedDocuments
        //instance.getElementLinkedDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElementPropertySet', function() {
      it('should call getElementPropertySet successfully', function(done) {
        //uncomment below and update the code to test getElementPropertySet
        //instance.getElementPropertySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElementPropertySetProperties', function() {
      it('should call getElementPropertySetProperties successfully', function(done) {
        //uncomment below and update the code to test getElementPropertySetProperties
        //instance.getElementPropertySetProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElementPropertySetProperty', function() {
      it('should call getElementPropertySetProperty successfully', function(done) {
        //uncomment below and update the code to test getElementPropertySetProperty
        //instance.getElementPropertySetProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElementPropertySetPropertyDefinition', function() {
      it('should call getElementPropertySetPropertyDefinition successfully', function(done) {
        //uncomment below and update the code to test getElementPropertySetPropertyDefinition
        //instance.getElementPropertySetPropertyDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElementPropertySetPropertyDefinitionUnit', function() {
      it('should call getElementPropertySetPropertyDefinitionUnit successfully', function(done) {
        //uncomment below and update the code to test getElementPropertySetPropertyDefinitionUnit
        //instance.getElementPropertySetPropertyDefinitionUnit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElementPropertySetPropertyDefinitionUnits', function() {
      it('should call getElementPropertySetPropertyDefinitionUnits successfully', function(done) {
        //uncomment below and update the code to test getElementPropertySetPropertyDefinitionUnits
        //instance.getElementPropertySetPropertyDefinitionUnits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElementPropertySetPropertyDefinitions', function() {
      it('should call getElementPropertySetPropertyDefinitions successfully', function(done) {
        //uncomment below and update the code to test getElementPropertySetPropertyDefinitions
        //instance.getElementPropertySetPropertyDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElementPropertySets', function() {
      it('should call getElementPropertySets successfully', function(done) {
        //uncomment below and update the code to test getElementPropertySets
        //instance.getElementPropertySets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElements', function() {
      it('should call getElements successfully', function(done) {
        //uncomment below and update the code to test getElements
        //instance.getElements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getElementsFromClassification', function() {
      it('should call getElementsFromClassification successfully', function(done) {
        //uncomment below and update the code to test getElementsFromClassification
        //instance.getElementsFromClassification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLabel', function() {
      it('should call getLabel successfully', function(done) {
        //uncomment below and update the code to test getLabel
        //instance.getLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLabels', function() {
      it('should call getLabels successfully', function(done) {
        //uncomment below and update the code to test getLabels
        //instance.getLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLayer', function() {
      it('should call getLayer successfully', function(done) {
        //uncomment below and update the code to test getLayer
        //instance.getLayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLayers', function() {
      it('should call getLayers successfully', function(done) {
        //uncomment below and update the code to test getLayers
        //instance.getLayers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMaterial', function() {
      it('should call getMaterial successfully', function(done) {
        //uncomment below and update the code to test getMaterial
        //instance.getMaterial(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMaterials', function() {
      it('should call getMaterials successfully', function(done) {
        //uncomment below and update the code to test getMaterials
        //instance.getMaterials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModel', function() {
      it('should call getModel successfully', function(done) {
        //uncomment below and update the code to test getModel
        //instance.getModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelClassifications', function() {
      it('should call getModelClassifications successfully', function(done) {
        //uncomment below and update the code to test getModelClassifications
        //instance.getModelClassifications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelMaterial', function() {
      it('should call getModelMaterial successfully', function(done) {
        //uncomment below and update the code to test getModelMaterial
        //instance.getModelMaterial(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelMaterials', function() {
      it('should call getModelMaterials successfully', function(done) {
        //uncomment below and update the code to test getModelMaterials
        //instance.getModelMaterials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelProperties', function() {
      it('should call getModelProperties successfully', function(done) {
        //uncomment below and update the code to test getModelProperties
        //instance.getModelProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelProperty', function() {
      it('should call getModelProperty successfully', function(done) {
        //uncomment below and update the code to test getModelProperty
        //instance.getModelProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelPropertyDefinition', function() {
      it('should call getModelPropertyDefinition successfully', function(done) {
        //uncomment below and update the code to test getModelPropertyDefinition
        //instance.getModelPropertyDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelPropertyDefinitions', function() {
      it('should call getModelPropertyDefinitions successfully', function(done) {
        //uncomment below and update the code to test getModelPropertyDefinitions
        //instance.getModelPropertyDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelUnit', function() {
      it('should call getModelUnit successfully', function(done) {
        //uncomment below and update the code to test getModelUnit
        //instance.getModelUnit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelUnits', function() {
      it('should call getModelUnits successfully', function(done) {
        //uncomment below and update the code to test getModelUnits
        //instance.getModelUnits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModels', function() {
      it('should call getModels successfully', function(done) {
        //uncomment below and update the code to test getModels
        //instance.getModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPostionedModel', function() {
      it('should call getPostionedModel successfully', function(done) {
        //uncomment below and update the code to test getPostionedModel
        //instance.getPostionedModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPostionedModels', function() {
      it('should call getPostionedModels successfully', function(done) {
        //uncomment below and update the code to test getPostionedModels
        //instance.getPostionedModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProcessorHandler', function() {
      it('should call getProcessorHandler successfully', function(done) {
        //uncomment below and update the code to test getProcessorHandler
        //instance.getProcessorHandler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProcessorHandlers', function() {
      it('should call getProcessorHandlers successfully', function(done) {
        //uncomment below and update the code to test getProcessorHandlers
        //instance.getProcessorHandlers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPropertiesTypes', function() {
      it('should call getPropertiesTypes successfully', function(done) {
        //uncomment below and update the code to test getPropertiesTypes
        //instance.getPropertiesTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPropertySet', function() {
      it('should call getPropertySet successfully', function(done) {
        //uncomment below and update the code to test getPropertySet
        //instance.getPropertySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPropertySets', function() {
      it('should call getPropertySets successfully', function(done) {
        //uncomment below and update the code to test getPropertySets
        //instance.getPropertySets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRawElements', function() {
      it('should call getRawElements successfully', function(done) {
        //uncomment below and update the code to test getRawElements
        //instance.getRawElements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSimpleElement', function() {
      it('should call getSimpleElement successfully', function(done) {
        //uncomment below and update the code to test getSimpleElement
        //instance.getSimpleElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSimpleElements', function() {
      it('should call getSimpleElements successfully', function(done) {
        //uncomment below and update the code to test getSimpleElements
        //instance.getSimpleElements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpace', function() {
      it('should call getSpace successfully', function(done) {
        //uncomment below and update the code to test getSpace
        //instance.getSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpaces', function() {
      it('should call getSpaces successfully', function(done) {
        //uncomment below and update the code to test getSpaces
        //instance.getSpaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStorey', function() {
      it('should call getStorey successfully', function(done) {
        //uncomment below and update the code to test getStorey
        //instance.getStorey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStoreyPlanPositioning', function() {
      it('should call getStoreyPlanPositioning successfully', function(done) {
        //uncomment below and update the code to test getStoreyPlanPositioning
        //instance.getStoreyPlanPositioning(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStoreys', function() {
      it('should call getStoreys successfully', function(done) {
        //uncomment below and update the code to test getStoreys
        //instance.getStoreys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSystem', function() {
      it('should call getSystem successfully', function(done) {
        //uncomment below and update the code to test getSystem
        //instance.getSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSystems', function() {
      it('should call getSystems successfully', function(done) {
        //uncomment below and update the code to test getSystems
        //instance.getSystems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTileset', function() {
      it('should call getTileset successfully', function(done) {
        //uncomment below and update the code to test getTileset
        //instance.getTileset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTypes', function() {
      it('should call getTypes successfully', function(done) {
        //uncomment below and update the code to test getTypes
        //instance.getTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getZone', function() {
      it('should call getZone successfully', function(done) {
        //uncomment below and update the code to test getZone
        //instance.getZone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getZoneSpace', function() {
      it('should call getZoneSpace successfully', function(done) {
        //uncomment below and update the code to test getZoneSpace
        //instance.getZoneSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getZoneSpaces', function() {
      it('should call getZoneSpaces successfully', function(done) {
        //uncomment below and update the code to test getZoneSpaces
        //instance.getZoneSpaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getZones', function() {
      it('should call getZones successfully', function(done) {
        //uncomment below and update the code to test getZones
        //instance.getZones(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('linkDocumentsOfElement', function() {
      it('should call linkDocumentsOfElement successfully', function(done) {
        //uncomment below and update the code to test linkDocumentsOfElement
        //instance.linkDocumentsOfElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClassificationElementRelations', function() {
      it('should call listClassificationElementRelations successfully', function(done) {
        //uncomment below and update the code to test listClassificationElementRelations
        //instance.listClassificationElementRelations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelsPositionedIn', function() {
      it('should call listModelsPositionedIn successfully', function(done) {
        //uncomment below and update the code to test listModelsPositionedIn
        //instance.listModelsPositionedIn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mergeIfcs', function() {
      it('should call mergeIfcs successfully', function(done) {
        //uncomment below and update the code to test mergeIfcs
        //instance.mergeIfcs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('optimizeIfc', function() {
      it('should call optimizeIfc successfully', function(done) {
        //uncomment below and update the code to test optimizeIfc
        //instance.optimizeIfc(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeAllElementPropertySet', function() {
      it('should call removeAllElementPropertySet successfully', function(done) {
        //uncomment below and update the code to test removeAllElementPropertySet
        //instance.removeAllElementPropertySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeClassificationOfElement', function() {
      it('should call removeClassificationOfElement successfully', function(done) {
        //uncomment below and update the code to test removeClassificationOfElement
        //instance.removeClassificationOfElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeDocumentOfElement', function() {
      it('should call removeDocumentOfElement successfully', function(done) {
        //uncomment below and update the code to test removeDocumentOfElement
        //instance.removeDocumentOfElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeElementPropertySet', function() {
      it('should call removeElementPropertySet successfully', function(done) {
        //uncomment below and update the code to test removeElementPropertySet
        //instance.removeElementPropertySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeElementPropertySetProperty', function() {
      it('should call removeElementPropertySetProperty successfully', function(done) {
        //uncomment below and update the code to test removeElementPropertySetProperty
        //instance.removeElementPropertySetProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeElementPropertySetPropertyDefinition', function() {
      it('should call removeElementPropertySetPropertyDefinition successfully', function(done) {
        //uncomment below and update the code to test removeElementPropertySetPropertyDefinition
        //instance.removeElementPropertySetPropertyDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeElementPropertySetPropertyDefinitionUnit', function() {
      it('should call removeElementPropertySetPropertyDefinitionUnit successfully', function(done) {
        //uncomment below and update the code to test removeElementPropertySetPropertyDefinitionUnit
        //instance.removeElementPropertySetPropertyDefinitionUnit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeElementsFromClassification', function() {
      it('should call removeElementsFromClassification successfully', function(done) {
        //uncomment below and update the code to test removeElementsFromClassification
        //instance.removeElementsFromClassification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reprocessModel', function() {
      it('should call reprocessModel successfully', function(done) {
        //uncomment below and update the code to test reprocessModel
        //instance.reprocessModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccessToken', function() {
      it('should call updateAccessToken successfully', function(done) {
        //uncomment below and update the code to test updateAccessToken
        //instance.updateAccessToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBuilding', function() {
      it('should call updateBuilding successfully', function(done) {
        //uncomment below and update the code to test updateBuilding
        //instance.updateBuilding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBuildingPlanPositioning', function() {
      it('should call updateBuildingPlanPositioning successfully', function(done) {
        //uncomment below and update the code to test updateBuildingPlanPositioning
        //instance.updateBuildingPlanPositioning(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDrawing', function() {
      it('should call updateDrawing successfully', function(done) {
        //uncomment below and update the code to test updateDrawing
        //instance.updateDrawing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateElement', function() {
      it('should call updateElement successfully', function(done) {
        //uncomment below and update the code to test updateElement
        //instance.updateElement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateElementPropertySetProperty', function() {
      it('should call updateElementPropertySetProperty successfully', function(done) {
        //uncomment below and update the code to test updateElementPropertySetProperty
        //instance.updateElementPropertySetProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLabel', function() {
      it('should call updateLabel successfully', function(done) {
        //uncomment below and update the code to test updateLabel
        //instance.updateLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLayer', function() {
      it('should call updateLayer successfully', function(done) {
        //uncomment below and update the code to test updateLayer
        //instance.updateLayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMask2D', function() {
      it('should call updateMask2D successfully', function(done) {
        //uncomment below and update the code to test updateMask2D
        //instance.updateMask2D(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModel', function() {
      it('should call updateModel successfully', function(done) {
        //uncomment below and update the code to test updateModel
        //instance.updateModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelFiles', function() {
      it('should call updateModelFiles successfully', function(done) {
        //uncomment below and update the code to test updateModelFiles
        //instance.updateModelFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelProperty', function() {
      it('should call updateModelProperty successfully', function(done) {
        //uncomment below and update the code to test updateModelProperty
        //instance.updateModelProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelPropertyDefinition', function() {
      it('should call updateModelPropertyDefinition successfully', function(done) {
        //uncomment below and update the code to test updateModelPropertyDefinition
        //instance.updateModelPropertyDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelTransform', function() {
      it('should call updateModelTransform successfully', function(done) {
        //uncomment below and update the code to test updateModelTransform
        //instance.updateModelTransform(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelUnit', function() {
      it('should call updateModelUnit successfully', function(done) {
        //uncomment below and update the code to test updateModelUnit
        //instance.updateModelUnit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrderBuildingPlan', function() {
      it('should call updateOrderBuildingPlan successfully', function(done) {
        //uncomment below and update the code to test updateOrderBuildingPlan
        //instance.updateOrderBuildingPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrderStoreyPlan', function() {
      it('should call updateOrderStoreyPlan successfully', function(done) {
        //uncomment below and update the code to test updateOrderStoreyPlan
        //instance.updateOrderStoreyPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrderStoreys', function() {
      it('should call updateOrderStoreys successfully', function(done) {
        //uncomment below and update the code to test updateOrderStoreys
        //instance.updateOrderStoreys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePostionedModel', function() {
      it('should call updatePostionedModel successfully', function(done) {
        //uncomment below and update the code to test updatePostionedModel
        //instance.updatePostionedModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProcessorHandler', function() {
      it('should call updateProcessorHandler successfully', function(done) {
        //uncomment below and update the code to test updateProcessorHandler
        //instance.updateProcessorHandler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePropertySet', function() {
      it('should call updatePropertySet successfully', function(done) {
        //uncomment below and update the code to test updatePropertySet
        //instance.updatePropertySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSpace', function() {
      it('should call updateSpace successfully', function(done) {
        //uncomment below and update the code to test updateSpace
        //instance.updateSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStorey', function() {
      it('should call updateStorey successfully', function(done) {
        //uncomment below and update the code to test updateStorey
        //instance.updateStorey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStoreyPlanPositioning', function() {
      it('should call updateStoreyPlanPositioning successfully', function(done) {
        //uncomment below and update the code to test updateStoreyPlanPositioning
        //instance.updateStoreyPlanPositioning(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSystem', function() {
      it('should call updateSystem successfully', function(done) {
        //uncomment below and update the code to test updateSystem
        //instance.updateSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateZone', function() {
      it('should call updateZone successfully', function(done) {
        //uncomment below and update the code to test updateZone
        //instance.updateZone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateZoneSpace', function() {
      it('should call updateZoneSpace successfully', function(done) {
        //uncomment below and update the code to test updateZoneSpace
        //instance.updateZoneSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
