/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProjectInvitation from './ProjectInvitation';
import User from './User';

/**
 * The UserProject model module.
 * @module model/UserProject
 * @version 0.0.0
 */
class UserProject {
    /**
     * Constructs a new <code>UserProject</code>.
     * @alias module:model/UserProject
     * @param project {Number} 
     */
    constructor(project) { 
        
        UserProject.initialize(this, project);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, project) { 
        obj['project'] = project;
    }

    /**
     * Constructs a <code>UserProject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserProject} obj Optional instance to populate.
     * @return {module:model/UserProject} The populated <code>UserProject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserProject();

            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = User.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('invitation')) {
                obj['invitation'] = ProjectInvitation.constructFromObject(data['invitation']);
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * User's role in the project
 * @member {Number} role
 */
UserProject.prototype['role'] = undefined;

/**
 * @member {module:model/User} user
 */
UserProject.prototype['user'] = undefined;

/**
 * @member {module:model/ProjectInvitation} invitation
 */
UserProject.prototype['invitation'] = undefined;

/**
 * @member {Number} project
 */
UserProject.prototype['project'] = undefined;






export default UserProject;

