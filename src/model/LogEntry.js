/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LogEntry model module.
 * @module model/LogEntry
 * @version 0.0.0
 */
class LogEntry {
    /**
     * Constructs a new <code>LogEntry</code>.
     * @alias module:model/LogEntry
     * @param id {Number} 
     * @param userId {Number} 
     * @param userEmail {String} 
     * @param appName {String} 
     * @param projectName {String} 
     * @param date {Date} 
     * @param action {String} 
     * @param description {Object.<String, Object>} 
     */
    constructor(id, userId, userEmail, appName, projectName, date, action, description) { 
        
        LogEntry.initialize(this, id, userId, userEmail, appName, projectName, date, action, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, userId, userEmail, appName, projectName, date, action, description) { 
        obj['id'] = id;
        obj['user_id'] = userId;
        obj['user_email'] = userEmail;
        obj['app_name'] = appName;
        obj['project_name'] = projectName;
        obj['date'] = date;
        obj['action'] = action;
        obj['description'] = description;
    }

    /**
     * Constructs a <code>LogEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LogEntry} obj Optional instance to populate.
     * @return {module:model/LogEntry} The populated <code>LogEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LogEntry();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('user_email')) {
                obj['user_email'] = ApiClient.convertToType(data['user_email'], 'String');
            }
            if (data.hasOwnProperty('app_name')) {
                obj['app_name'] = ApiClient.convertToType(data['app_name'], 'String');
            }
            if (data.hasOwnProperty('project_name')) {
                obj['project_name'] = ApiClient.convertToType(data['project_name'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
LogEntry.prototype['id'] = undefined;

/**
 * @member {Number} user_id
 */
LogEntry.prototype['user_id'] = undefined;

/**
 * @member {String} user_email
 */
LogEntry.prototype['user_email'] = undefined;

/**
 * @member {String} app_name
 */
LogEntry.prototype['app_name'] = undefined;

/**
 * @member {String} project_name
 */
LogEntry.prototype['project_name'] = undefined;

/**
 * @member {Date} date
 */
LogEntry.prototype['date'] = undefined;

/**
 * @member {String} action
 */
LogEntry.prototype['action'] = undefined;

/**
 * @member {Object.<String, Object>} description
 */
LogEntry.prototype['description'] = undefined;






export default LogEntry;

