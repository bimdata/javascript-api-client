/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelDocumentRequest model module.
 * @module model/ModelDocumentRequest
 * @version 0.0.0
 */
class ModelDocumentRequest {
    /**
     * Constructs a new <code>ModelDocumentRequest</code>.
     * @alias module:model/ModelDocumentRequest
     * @param name {String} Shown name of the file
     * @param file {File} 
     */
    constructor(name, file) { 
        
        ModelDocumentRequest.initialize(this, name, file);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, file) { 
        obj['name'] = name;
        obj['file'] = file;
    }

    /**
     * Constructs a <code>ModelDocumentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelDocumentRequest} obj Optional instance to populate.
     * @return {module:model/ModelDocumentRequest} The populated <code>ModelDocumentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelDocumentRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('file_name')) {
                obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], File);
            }
            if (data.hasOwnProperty('process_hint')) {
                obj['process_hint'] = ApiClient.convertToType(data['process_hint'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Shown name of the file
 * @member {String} name
 */
ModelDocumentRequest.prototype['name'] = undefined;

/**
 * Full name of the file
 * @member {String} file_name
 */
ModelDocumentRequest.prototype['file_name'] = undefined;

/**
 * @member {Number} parent_id
 */
ModelDocumentRequest.prototype['parent_id'] = undefined;

/**
 * Description of the file
 * @member {String} description
 */
ModelDocumentRequest.prototype['description'] = undefined;

/**
 * @member {File} file
 */
ModelDocumentRequest.prototype['file'] = undefined;

/**
 * Provide a info about the document in order to customize the way it is processed.  * `PHOTOSPHERE` - PHOTOSPHERE
 * @member {module:model/ModelDocumentRequest.ProcessHintEnum} process_hint
 */
ModelDocumentRequest.prototype['process_hint'] = undefined;





/**
 * Allowed values for the <code>process_hint</code> property.
 * @enum {String}
 * @readonly
 */
ModelDocumentRequest['ProcessHintEnum'] = {

    /**
     * value: "PHOTOSPHERE"
     * @const
     */
    "PHOTOSPHERE": "PHOTOSPHERE"
};



export default ModelDocumentRequest;

