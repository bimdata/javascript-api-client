/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectInvitationRequest model module.
 * @module model/ProjectInvitationRequest
 * @version 0.0.0
 */
class ProjectInvitationRequest {
    /**
     * Constructs a new <code>ProjectInvitationRequest</code>.
     * @alias module:model/ProjectInvitationRequest
     * @param email {String} email of the user to invite
     * @param redirectUri {String} User will be redirected to this uri when they accept the invitation
     * @param role {module:model/ProjectInvitationRequest.RoleEnum} * `100` - admin * `50` - user * `25` - guest
     */
    constructor(email, redirectUri, role) { 
        
        ProjectInvitationRequest.initialize(this, email, redirectUri, role);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, redirectUri, role) { 
        obj['email'] = email;
        obj['redirect_uri'] = redirectUri;
        obj['role'] = role;
    }

    /**
     * Constructs a <code>ProjectInvitationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectInvitationRequest} obj Optional instance to populate.
     * @return {module:model/ProjectInvitationRequest} The populated <code>ProjectInvitationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectInvitationRequest();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('redirect_uri')) {
                obj['redirect_uri'] = ApiClient.convertToType(data['redirect_uri'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * email of the user to invite
 * @member {String} email
 */
ProjectInvitationRequest.prototype['email'] = undefined;

/**
 * User will be redirected to this uri when they accept the invitation
 * @member {String} redirect_uri
 */
ProjectInvitationRequest.prototype['redirect_uri'] = undefined;

/**
 * * `100` - admin * `50` - user * `25` - guest
 * @member {module:model/ProjectInvitationRequest.RoleEnum} role
 */
ProjectInvitationRequest.prototype['role'] = undefined;





/**
 * Allowed values for the <code>role</code> property.
 * @enum {Number}
 * @readonly
 */
ProjectInvitationRequest['RoleEnum'] = {

    /**
     * value: 100
     * @const
     */
    "100": 100,

    /**
     * value: 50
     * @const
     */
    "50": 50,

    /**
     * value: 25
     * @const
     */
    "25": 25
};



export default ProjectInvitationRequest;

