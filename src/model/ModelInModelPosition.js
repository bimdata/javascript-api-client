/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelInModelPosition model module.
 * @module model/ModelInModelPosition
 * @version 0.0.0
 */
class ModelInModelPosition {
    /**
     * Constructs a new <code>ModelInModelPosition</code>.
     * @alias module:model/ModelInModelPosition
     * @param parentModel {Number} 
     * @param position {Array.<Number>} Must be an array [x,y,z] of the position of the positioned model in reference model coordinates
     */
    constructor(parentModel, position) { 
        
        ModelInModelPosition.initialize(this, parentModel, position);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, parentModel, position) { 
        obj['parent_model'] = parentModel;
        obj['position'] = position;
    }

    /**
     * Constructs a <code>ModelInModelPosition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelInModelPosition} obj Optional instance to populate.
     * @return {module:model/ModelInModelPosition} The populated <code>ModelInModelPosition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelInModelPosition();

            if (data.hasOwnProperty('parent_model')) {
                obj['parent_model'] = ApiClient.convertToType(data['parent_model'], 'Number');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], ['Number']);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} parent_model
 */
ModelInModelPosition.prototype['parent_model'] = undefined;

/**
 * Must be an array [x,y,z] of the position of the positioned model in reference model coordinates
 * @member {Array.<Number>} position
 */
ModelInModelPosition.prototype['position'] = undefined;






export default ModelInModelPosition;

