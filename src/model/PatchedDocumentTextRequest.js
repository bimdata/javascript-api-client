/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PatchedDocumentTextRequest model module.
 * @module model/PatchedDocumentTextRequest
 * @version 0.0.0
 */
class PatchedDocumentTextRequest {
    /**
     * Constructs a new <code>PatchedDocumentTextRequest</code>.
     * @alias module:model/PatchedDocumentTextRequest
     */
    constructor() { 
        
        PatchedDocumentTextRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchedDocumentTextRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchedDocumentTextRequest} obj Optional instance to populate.
     * @return {module:model/PatchedDocumentTextRequest} The populated <code>PatchedDocumentTextRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchedDocumentTextRequest();

            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The full text representation of a document if the feature is enabled and the file format supported
 * @member {String} text
 */
PatchedDocumentTextRequest.prototype['text'] = undefined;

/**
 * * `french` - french * `spanish` - spanish * `german` - german * `italian` - italian * `english` - english
 * @member {module:model/PatchedDocumentTextRequest.LanguageEnum} language
 */
PatchedDocumentTextRequest.prototype['language'] = undefined;





/**
 * Allowed values for the <code>language</code> property.
 * @enum {String}
 * @readonly
 */
PatchedDocumentTextRequest['LanguageEnum'] = {

    /**
     * value: "french"
     * @const
     */
    "french": "french",

    /**
     * value: "spanish"
     * @const
     */
    "spanish": "spanish",

    /**
     * value: "german"
     * @const
     */
    "german": "german",

    /**
     * value: "italian"
     * @const
     */
    "italian": "italian",

    /**
     * value: "english"
     * @const
     */
    "english": "english",

    /**
     * value: "null"
     * @const
     */
    "null": "null"
};



export default PatchedDocumentTextRequest;

