/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Auth model module.
 * @module model/Auth
 * @version 0.0.0
 */
class Auth {
    /**
     * Constructs a new <code>Auth</code>.
     * @alias module:model/Auth
     * @param oauth2AuthUrl {String} 
     * @param oauth2TokenUrl {String} 
     * @param httpBasicSupported {Boolean} 
     * @param supportedOauth2Flows {Array.<String>} 
     */
    constructor(oauth2AuthUrl, oauth2TokenUrl, httpBasicSupported, supportedOauth2Flows) { 
        
        Auth.initialize(this, oauth2AuthUrl, oauth2TokenUrl, httpBasicSupported, supportedOauth2Flows);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, oauth2AuthUrl, oauth2TokenUrl, httpBasicSupported, supportedOauth2Flows) { 
        obj['oauth2_auth_url'] = oauth2AuthUrl;
        obj['oauth2_token_url'] = oauth2TokenUrl;
        obj['http_basic_supported'] = httpBasicSupported;
        obj['supported_oauth2_flows'] = supportedOauth2Flows;
    }

    /**
     * Constructs a <code>Auth</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Auth} obj Optional instance to populate.
     * @return {module:model/Auth} The populated <code>Auth</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Auth();

            if (data.hasOwnProperty('oauth2_auth_url')) {
                obj['oauth2_auth_url'] = ApiClient.convertToType(data['oauth2_auth_url'], 'String');
            }
            if (data.hasOwnProperty('oauth2_token_url')) {
                obj['oauth2_token_url'] = ApiClient.convertToType(data['oauth2_token_url'], 'String');
            }
            if (data.hasOwnProperty('http_basic_supported')) {
                obj['http_basic_supported'] = ApiClient.convertToType(data['http_basic_supported'], 'Boolean');
            }
            if (data.hasOwnProperty('supported_oauth2_flows')) {
                obj['supported_oauth2_flows'] = ApiClient.convertToType(data['supported_oauth2_flows'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} oauth2_auth_url
 */
Auth.prototype['oauth2_auth_url'] = undefined;

/**
 * @member {String} oauth2_token_url
 */
Auth.prototype['oauth2_token_url'] = undefined;

/**
 * @member {Boolean} http_basic_supported
 */
Auth.prototype['http_basic_supported'] = undefined;

/**
 * @member {Array.<String>} supported_oauth2_flows
 */
Auth.prototype['supported_oauth2_flows'] = undefined;






export default Auth;

