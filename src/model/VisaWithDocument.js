/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LightDocument from './LightDocument';
import UserProject from './UserProject';
import VisaComment from './VisaComment';
import VisaValidation from './VisaValidation';

/**
 * The VisaWithDocument model module.
 * @module model/VisaWithDocument
 * @version 0.0.0
 */
class VisaWithDocument {
    /**
     * Constructs a new <code>VisaWithDocument</code>.
     * @alias module:model/VisaWithDocument
     * @param id {Number} 
     * @param validations {Array.<module:model/VisaValidation>} 
     * @param validationsInError {Array.<Number>} Validation IDs where one or more validators have no longer access to the visa document.
     * @param creator {module:model/UserProject} 
     * @param documentId {Number} 
     * @param status {module:model/VisaWithDocument.StatusEnum} * `O` - opened * `P` - paused * `C` - closed
     * @param comments {Array.<module:model/VisaComment>} 
     * @param createdAt {Date} 
     * @param updatedAt {Date} 
     * @param document {module:model/LightDocument} 
     */
    constructor(id, validations, validationsInError, creator, documentId, status, comments, createdAt, updatedAt, document) { 
        
        VisaWithDocument.initialize(this, id, validations, validationsInError, creator, documentId, status, comments, createdAt, updatedAt, document);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, validations, validationsInError, creator, documentId, status, comments, createdAt, updatedAt, document) { 
        obj['id'] = id;
        obj['validations'] = validations;
        obj['validations_in_error'] = validationsInError;
        obj['creator'] = creator;
        obj['document_id'] = documentId;
        obj['status'] = status;
        obj['comments'] = comments;
        obj['created_at'] = createdAt;
        obj['updated_at'] = updatedAt;
        obj['document'] = document;
    }

    /**
     * Constructs a <code>VisaWithDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VisaWithDocument} obj Optional instance to populate.
     * @return {module:model/VisaWithDocument} The populated <code>VisaWithDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VisaWithDocument();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('validations')) {
                obj['validations'] = ApiClient.convertToType(data['validations'], [VisaValidation]);
            }
            if (data.hasOwnProperty('validations_in_error')) {
                obj['validations_in_error'] = ApiClient.convertToType(data['validations_in_error'], ['Number']);
            }
            if (data.hasOwnProperty('creator')) {
                obj['creator'] = ApiClient.convertToType(data['creator'], UserProject);
            }
            if (data.hasOwnProperty('document_id')) {
                obj['document_id'] = ApiClient.convertToType(data['document_id'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], [VisaComment]);
            }
            if (data.hasOwnProperty('deadline')) {
                obj['deadline'] = ApiClient.convertToType(data['deadline'], 'Date');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('document')) {
                obj['document'] = ApiClient.convertToType(data['document'], LightDocument);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
VisaWithDocument.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/VisaValidation>} validations
 */
VisaWithDocument.prototype['validations'] = undefined;

/**
 * Validation IDs where one or more validators have no longer access to the visa document.
 * @member {Array.<Number>} validations_in_error
 */
VisaWithDocument.prototype['validations_in_error'] = undefined;

/**
 * @member {module:model/UserProject} creator
 */
VisaWithDocument.prototype['creator'] = undefined;

/**
 * @member {Number} document_id
 */
VisaWithDocument.prototype['document_id'] = undefined;

/**
 * * `O` - opened * `P` - paused * `C` - closed
 * @member {module:model/VisaWithDocument.StatusEnum} status
 */
VisaWithDocument.prototype['status'] = undefined;

/**
 * Description of the visa
 * @member {String} description
 */
VisaWithDocument.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/VisaComment>} comments
 */
VisaWithDocument.prototype['comments'] = undefined;

/**
 * @member {Date} deadline
 */
VisaWithDocument.prototype['deadline'] = undefined;

/**
 * @member {Date} created_at
 */
VisaWithDocument.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
VisaWithDocument.prototype['updated_at'] = undefined;

/**
 * @member {module:model/LightDocument} document
 */
VisaWithDocument.prototype['document'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
VisaWithDocument['StatusEnum'] = {

    /**
     * value: "O"
     * @const
     */
    "O": "O",

    /**
     * value: "P"
     * @const
     */
    "P": "P",

    /**
     * value: "C"
     * @const
     */
    "C": "C"
};



export default VisaWithDocument;

