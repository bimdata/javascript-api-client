/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Rule from './Rule';

/**
 * The Ruleset model module.
 * @module model/Ruleset
 * @version 0.0.0
 */
class Ruleset {
    /**
     * Constructs a new <code>Ruleset</code>.
     * @alias module:model/Ruleset
     * @param name {String} 
     */
    constructor(name) { 
        
        Ruleset.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>Ruleset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Ruleset} obj Optional instance to populate.
     * @return {module:model/Ruleset} The populated <code>Ruleset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Ruleset();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('parent_ruleset_id')) {
                obj['parent_ruleset_id'] = ApiClient.convertToType(data['parent_ruleset_id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [Rule]);
            }
            if (data.hasOwnProperty('rulesets')) {
                obj['rulesets'] = ApiClient.convertToType(data['rulesets'], [Ruleset]);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Ruleset.prototype['id'] = undefined;

/**
 * @member {Number} parent_ruleset_id
 */
Ruleset.prototype['parent_ruleset_id'] = undefined;

/**
 * @member {String} name
 */
Ruleset.prototype['name'] = undefined;

/**
 * @member {String} description
 */
Ruleset.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/Rule>} rules
 */
Ruleset.prototype['rules'] = undefined;

/**
 * @member {Array.<module:model/Ruleset>} rulesets
 */
Ruleset.prototype['rulesets'] = undefined;






export default Ruleset;

