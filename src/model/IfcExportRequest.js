/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IfcExportRequest model module.
 * @module model/IfcExportRequest
 * @version 0.0.0
 */
class IfcExportRequest {
    /**
     * Constructs a new <code>IfcExportRequest</code>.
     * @alias module:model/IfcExportRequest
     * @param fileName {String} The name of the exported IFC file. It MUST end with .ifc or the exported file won't be processed by BIMData
     */
    constructor(fileName) { 
        
        IfcExportRequest.initialize(this, fileName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fileName) { 
        obj['file_name'] = fileName;
    }

    /**
     * Constructs a <code>IfcExportRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IfcExportRequest} obj Optional instance to populate.
     * @return {module:model/IfcExportRequest} The populated <code>IfcExportRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IfcExportRequest();

            if (data.hasOwnProperty('classifications')) {
                obj['classifications'] = ApiClient.convertToType(data['classifications'], 'String');
            }
            if (data.hasOwnProperty('zones')) {
                obj['zones'] = ApiClient.convertToType(data['zones'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], 'String');
            }
            if (data.hasOwnProperty('systems')) {
                obj['systems'] = ApiClient.convertToType(data['systems'], 'String');
            }
            if (data.hasOwnProperty('layers')) {
                obj['layers'] = ApiClient.convertToType(data['layers'], 'String');
            }
            if (data.hasOwnProperty('materials')) {
                obj['materials'] = ApiClient.convertToType(data['materials'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], 'String');
            }
            if (data.hasOwnProperty('structure')) {
                obj['structure'] = ApiClient.convertToType(data['structure'], 'String');
            }
            if (data.hasOwnProperty('uuids')) {
                obj['uuids'] = ApiClient.convertToType(data['uuids'], ['String']);
            }
            if (data.hasOwnProperty('file_name')) {
                obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Exported IFC will include classifications from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include classifications(NONE)
 * @member {module:model/IfcExportRequest.ClassificationsEnum} classifications
 * @default 'UPDATED'
 */
IfcExportRequest.prototype['classifications'] = 'UPDATED';

/**
 * Exported IFC will include zones from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include zones(NONE)
 * @member {module:model/IfcExportRequest.ZonesEnum} zones
 * @default 'UPDATED'
 */
IfcExportRequest.prototype['zones'] = 'UPDATED';

/**
 * Exported IFC will include properties from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include properties(NONE)
 * @member {module:model/IfcExportRequest.PropertiesEnum} properties
 * @default 'UPDATED'
 */
IfcExportRequest.prototype['properties'] = 'UPDATED';

/**
 * Exported IFC will include systems from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include systems(NONE)
 * @member {module:model/IfcExportRequest.SystemsEnum} systems
 * @default 'UPDATED'
 */
IfcExportRequest.prototype['systems'] = 'UPDATED';

/**
 * Exported IFC will include layers from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include layers(NONE)
 * @member {module:model/IfcExportRequest.LayersEnum} layers
 * @default 'UPDATED'
 */
IfcExportRequest.prototype['layers'] = 'UPDATED';

/**
 * Exported IFC will include materials from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include materials(NONE)
 * @member {module:model/IfcExportRequest.MaterialsEnum} materials
 * @default 'UPDATED'
 */
IfcExportRequest.prototype['materials'] = 'UPDATED';

/**
 * Exported IFC will include attributes from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include attributes(NONE)
 * @member {module:model/IfcExportRequest.AttributesEnum} attributes
 * @default 'UPDATED'
 */
IfcExportRequest.prototype['attributes'] = 'UPDATED';

/**
 * Exported IFC will include the structure from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include structure(NONE)
 * @member {module:model/IfcExportRequest.StructureEnum} structure
 * @default 'UPDATED'
 */
IfcExportRequest.prototype['structure'] = 'UPDATED';

/**
 * Exported IFC will only have those elements. If omitted, all elements will be exported
 * @member {Array.<String>} uuids
 */
IfcExportRequest.prototype['uuids'] = undefined;

/**
 * The name of the exported IFC file. It MUST end with .ifc or the exported file won't be processed by BIMData
 * @member {String} file_name
 */
IfcExportRequest.prototype['file_name'] = undefined;





/**
 * Allowed values for the <code>classifications</code> property.
 * @enum {String}
 * @readonly
 */
IfcExportRequest['ClassificationsEnum'] = {

    /**
     * value: "ORIGINAL"
     * @const
     */
    "ORIGINAL": "ORIGINAL",

    /**
     * value: "UPDATED"
     * @const
     */
    "UPDATED": "UPDATED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE"
};


/**
 * Allowed values for the <code>zones</code> property.
 * @enum {String}
 * @readonly
 */
IfcExportRequest['ZonesEnum'] = {

    /**
     * value: "ORIGINAL"
     * @const
     */
    "ORIGINAL": "ORIGINAL",

    /**
     * value: "UPDATED"
     * @const
     */
    "UPDATED": "UPDATED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE"
};


/**
 * Allowed values for the <code>properties</code> property.
 * @enum {String}
 * @readonly
 */
IfcExportRequest['PropertiesEnum'] = {

    /**
     * value: "ORIGINAL"
     * @const
     */
    "ORIGINAL": "ORIGINAL",

    /**
     * value: "UPDATED"
     * @const
     */
    "UPDATED": "UPDATED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE"
};


/**
 * Allowed values for the <code>systems</code> property.
 * @enum {String}
 * @readonly
 */
IfcExportRequest['SystemsEnum'] = {

    /**
     * value: "ORIGINAL"
     * @const
     */
    "ORIGINAL": "ORIGINAL",

    /**
     * value: "UPDATED"
     * @const
     */
    "UPDATED": "UPDATED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE"
};


/**
 * Allowed values for the <code>layers</code> property.
 * @enum {String}
 * @readonly
 */
IfcExportRequest['LayersEnum'] = {

    /**
     * value: "ORIGINAL"
     * @const
     */
    "ORIGINAL": "ORIGINAL",

    /**
     * value: "UPDATED"
     * @const
     */
    "UPDATED": "UPDATED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE"
};


/**
 * Allowed values for the <code>materials</code> property.
 * @enum {String}
 * @readonly
 */
IfcExportRequest['MaterialsEnum'] = {

    /**
     * value: "ORIGINAL"
     * @const
     */
    "ORIGINAL": "ORIGINAL",

    /**
     * value: "UPDATED"
     * @const
     */
    "UPDATED": "UPDATED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE"
};


/**
 * Allowed values for the <code>attributes</code> property.
 * @enum {String}
 * @readonly
 */
IfcExportRequest['AttributesEnum'] = {

    /**
     * value: "ORIGINAL"
     * @const
     */
    "ORIGINAL": "ORIGINAL",

    /**
     * value: "UPDATED"
     * @const
     */
    "UPDATED": "UPDATED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE"
};


/**
 * Allowed values for the <code>structure</code> property.
 * @enum {String}
 * @readonly
 */
IfcExportRequest['StructureEnum'] = {

    /**
     * value: "ORIGINAL"
     * @const
     */
    "ORIGINAL": "ORIGINAL",

    /**
     * value: "UPDATED"
     * @const
     */
    "UPDATED": "UPDATED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE"
};



export default IfcExportRequest;

