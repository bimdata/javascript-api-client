/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Mask2DRequest model module.
 * @module model/Mask2DRequest
 * @version 0.0.0
 */
class Mask2DRequest {
    /**
     * Constructs a new <code>Mask2DRequest</code>.
     * @alias module:model/Mask2DRequest
     * @param viewport {Array.<Array.<Number>>} Viewport of the manually created mask to show only a part of the model.
     */
    constructor(viewport) { 
        
        Mask2DRequest.initialize(this, viewport);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, viewport) { 
        obj['viewport'] = viewport;
    }

    /**
     * Constructs a <code>Mask2DRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Mask2DRequest} obj Optional instance to populate.
     * @return {module:model/Mask2DRequest} The populated <code>Mask2DRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Mask2DRequest();

            if (data.hasOwnProperty('viewport')) {
                obj['viewport'] = ApiClient.convertToType(data['viewport'], [['Number']]);
            }
        }
        return obj;
    }


}

/**
 * Viewport of the manually created mask to show only a part of the model.
 * @member {Array.<Array.<Number>>} viewport
 */
Mask2DRequest.prototype['viewport'] = undefined;






export default Mask2DRequest;

