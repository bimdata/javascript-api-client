/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RuleComponent from './RuleComponent';

/**
 * The Rule model module.
 * @module model/Rule
 * @version 0.0.0
 */
class Rule {
    /**
     * Constructs a new <code>Rule</code>.
     * Adds nested create feature
     * @alias module:model/Rule
     * @param id {Number} 
     * @param condition {String} 
     */
    constructor(id, condition) { 
        
        Rule.initialize(this, id, condition);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, condition) { 
        obj['id'] = id;
        obj['condition'] = condition;
    }

    /**
     * Constructs a <code>Rule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Rule} obj Optional instance to populate.
     * @return {module:model/Rule} The populated <code>Rule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Rule();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('rule_components')) {
                obj['rule_components'] = ApiClient.convertToType(data['rule_components'], [RuleComponent]);
            }
            if (data.hasOwnProperty('on')) {
                obj['on'] = Rule.constructFromObject(data['on']);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Rule.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Rule.prototype['name'] = undefined;

/**
 * @member {String} condition
 */
Rule.prototype['condition'] = undefined;

/**
 * @member {Array.<module:model/RuleComponent>} rule_components
 */
Rule.prototype['rule_components'] = undefined;

/**
 * @member {module:model/Rule} on
 */
Rule.prototype['on'] = undefined;






export default Rule;

