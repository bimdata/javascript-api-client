/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IfcMerge model module.
 * @module model/IfcMerge
 * @version 0.0.0
 */
class IfcMerge {
    /**
     * Constructs a new <code>IfcMerge</code>.
     * @alias module:model/IfcMerge
     * @param ifcIds {Array.<Number>} 
     * @param exportName {String} 
     */
    constructor(ifcIds, exportName) { 
        
        IfcMerge.initialize(this, ifcIds, exportName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ifcIds, exportName) { 
        obj['ifc_ids'] = ifcIds;
        obj['export_name'] = exportName;
    }

    /**
     * Constructs a <code>IfcMerge</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IfcMerge} obj Optional instance to populate.
     * @return {module:model/IfcMerge} The populated <code>IfcMerge</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IfcMerge();

            if (data.hasOwnProperty('ifc_ids')) {
                obj['ifc_ids'] = ApiClient.convertToType(data['ifc_ids'], ['Number']);
            }
            if (data.hasOwnProperty('floating_point_reduction')) {
                obj['floating_point_reduction'] = ApiClient.convertToType(data['floating_point_reduction'], 'Number');
            }
            if (data.hasOwnProperty('export_name')) {
                obj['export_name'] = ApiClient.convertToType(data['export_name'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<Number>} ifc_ids
 */
IfcMerge.prototype['ifc_ids'] = undefined;

/**
 * Precision of geometries. 6 is micrometre, 9 is nanometre, ect...
 * @member {Number} floating_point_reduction
 */
IfcMerge.prototype['floating_point_reduction'] = undefined;

/**
 * @member {String} export_name
 */
IfcMerge.prototype['export_name'] = undefined;






export default IfcMerge;

