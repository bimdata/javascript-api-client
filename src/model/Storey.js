/**
 * BIMData API
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelWithPositioningPlan from './ModelWithPositioningPlan';

/**
 * The Storey model module.
 * @module model/Storey
 * @version 0.0.0
 */
class Storey {
    /**
     * Constructs a new <code>Storey</code>.
     * @alias module:model/Storey
     * @param name {String} 
     */
    constructor(name) { 
        
        Storey.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>Storey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Storey} obj Optional instance to populate.
     * @return {module:model/Storey} The populated <code>Storey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Storey();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('ifc_id')) {
                obj['ifc_id'] = ApiClient.convertToType(data['ifc_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('elevation')) {
                obj['elevation'] = ApiClient.convertToType(data['elevation'], 'Number');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('models')) {
                obj['models'] = ApiClient.convertToType(data['models'], [ModelWithPositioningPlan]);
            }
            if (data.hasOwnProperty('models_unreachable_count')) {
                obj['models_unreachable_count'] = ApiClient.convertToType(data['models_unreachable_count'], 'Number');
            }
            if (data.hasOwnProperty('is_site')) {
                obj['is_site'] = ApiClient.convertToType(data['is_site'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Storey.prototype['id'] = undefined;

/**
 * @member {String} ifc_id
 */
Storey.prototype['ifc_id'] = undefined;

/**
 * @member {String} name
 */
Storey.prototype['name'] = undefined;

/**
 * @member {Number} elevation
 */
Storey.prototype['elevation'] = undefined;

/**
 * @member {Number} order
 */
Storey.prototype['order'] = undefined;

/**
 * @member {Array.<module:model/ModelWithPositioningPlan>} models
 */
Storey.prototype['models'] = undefined;

/**
 * @member {Number} models_unreachable_count
 */
Storey.prototype['models_unreachable_count'] = undefined;

/**
 * @member {Boolean} is_site
 */
Storey.prototype['is_site'] = undefined;






export default Storey;

